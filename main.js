!function(){"use strict";function e(e,t,s){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var i=s.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}var t=class{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_hideInputError(e,t){const s=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),s.classList.remove(this._errorClass),s.textContent=" "}_hasInvalidInput(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_isFormValid(){return this._inputList.every((e=>e.validity.valid))}_toggleButtonState(){this._isFormValid()?(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1):(this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._inactiveButtonClass))}_setEventListeners(){this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector)),this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._hasInvalidInput(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}};class s{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._handleEscUp=this._handleEscUp.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keyup",this._handleEscUp)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keyup",this._handleEscUp)}_handleEscUp(e){"Escape"===e.key&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close-img"))&&this.close()}))}}var i=class extends s{constructor(e,t){let{handleFormSubmit:s,loadingButtonText:i}=t;var r,n,o;super({popupSelector:e}),r=this,o=e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var s=e[Symbol.toPrimitive];if(void 0!==s){var i=s.call(e,"string");if("object"!=typeof i)return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_handleSubmit"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._formSelector=this._popupElement.querySelector(".modal__container"),this._modalFormInputs=this._popupElement.querySelectorAll(".modal__input"),this._handleFormSubmit=s,this._submitButton=this._popupElement.querySelector(".modal__button"),this._loadingButtonText=i,this._buttonText=this._submitButton.textContent}setEventListeners(){super.setEventListeners(),this._popupElement.addEventListener("submit",this._handleSubmit)}showLoading(){this._submitButton.textContent=this._loadingButtonText}hideLoading(){this._submitButton.textContent=this._buttonText}_getInputValues(){const e={};return this._modalFormInputs.forEach((t=>{e[t.name]=t.value})),e}close(){this._formSelector.reset(),super.close()}};const r={formSelector:".modal__container",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},n=document.querySelector("#add-card-form"),o=document.querySelector(".modal").querySelector(".modal__container"),a=document.querySelector("#add-button"),l=document.querySelector(".profile__edit"),h=document.querySelector("#modal-profile-form"),c=document.querySelector("#avatar-form"),d=h.querySelector("#owner-name"),u=h.querySelector(".modal__description"),_=document.querySelector(".profile__edit-avatar"),m=new class{constructor(e){let{profileNameSelector:t,profileDescriptionSelector:s,avatarSelector:i}=e;this._profileNameElement=document.querySelector(t),this._profileDescriptionElement=document.querySelector(s),this._avatarElement=document.querySelector(i)}setUserInfo(e){let{name:t,about:s}=e;this._profileNameElement.textContent=t,this._profileDescriptionElement.textContent=s}getUserInfo(){return{name:this._profileNameElement.textContent,description:this._profileDescriptionElement.textContent}}setAvatar(e){let{avatar:t}=e;this._avatarElement.src=t}getAvatar(){return{avatar:this._avatarElement.src}}}({profileNameSelector:".profile__title",profileDescriptionSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),p=new class extends s{constructor(e){super({popupSelector:e}),this._imageModalPreview=this._popupElement.querySelector(".modal__image"),this._textTitlePreview=this._popupElement.querySelector(".modal__image-title")}open(e){let{link:t,name:s}=e;this._imageModalPreview.src=t,this._imageModalPreview.alt=s,this._textTitlePreview.textContent=s,super.open()}}("#image-modal");p.setEventListeners();const v=new t(r,o),f=new t(r,n),b=new t(r,c),S=new i("#add-card-modal",{handleFormSubmit:function(e){let{name:t,link:s}=e;return S.showLoading(),k.addNewCard(t,s).then((e=>{I(e)})).then((()=>{S.close()})).catch((e=>{console.log(e)})).finally((()=>{S.hideLoading()}))},loadingButtonText:"Saving..."});S.setEventListeners();const g=new i("#edit-modal",{handleFormSubmit:function(e){return g.showLoading(),k.updateProfileInfo(e.title,e.subtitle).then((()=>{m.setUserInfo({name:e.title,about:e.subtitle}),g.close()})).catch((e=>{console.log(e)})).finally((()=>{g.hideLoading()}))},loadingButtonText:"Saving..."});g.setEventListeners();const E=new i("#avatar-form",{handleFormSubmit:function(e){let{avatar:t}=e;return E.showLoading(),k.updateAvatar(t).then((e=>{m.setAvatar({avatar:e.avatar})})).then((()=>{this.close()})).catch((e=>{console.log(e)})).finally((()=>{E.hideLoading()}))},loadingButtonText:"Saving..."});E.setEventListeners(),v.enableValidation(),f.enableValidation(),b.enableValidation();const L=new class extends s{constructor(e,t){super({popupSelector:e}),this._loadingButtonText=t,this._formSelector=this._popupElement.querySelector(".modal__container"),this._submitButton=this._formSelector.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}setEventListeners(){super.setEventListeners(),this._formSelector.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitCallback()}))}setSubmit(e){this._handleSubmitCallback=e}toggleIsDeleting(e){this._submitButton.textContent=e?"Deleting...":this._submitButtonText}toggleIsSaving(e){this._submitButton.textContent=e?"Saving...":this._submitButtonText}showLoading(e){this._submitButton.textContent=e?"Loading...":"Yes"}hideLoading(){this._submitButton.textContent=this._submitButtonText}}("#confirm-del-modal","Saving...");L.setEventListeners();const k=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}updateProfileInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,description:t})}).then(this._checkResponse)}addNewCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}getLikes(){return fetch(`${this._baseUrl}/cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}addLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}removeLikes(e){return fetch(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"f94b04b9-5a38-41e0-84ea-16cace305bef","Content-Type":"application/json"}});let y,C;function I(t){const s=new class{constructor(t){let{cardData:s,cardSelector:i,userId:r,handleCardClick:n,handleLikeClick:o,handleDeleteClick:a}=t;e(this,"updateLikes",(e=>{this._likes=e,this.renderLikes()})),e(this,"removeCard",(()=>{this._element.remove(),this._element=null})),this._name=s.name,this._link=s.link,this._likes=s.likes,this._userId=r,this._cardId=s._id,this._ownerId=s.owner._id,this._cardSelector=i,this._handleCardClick=n,this._handleLikeClick=o,this._handleDeleteClick=a}_setEventListeners(){this._element.querySelector(".card__button").addEventListener("click",(()=>this._handleLikeClick(this._cardId,this.isLiked()))),this._element.querySelector(".card__delete").addEventListener("click",(()=>this._handleDeleteClick(this._cardId))),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleCardClick({link:this._link,name:this._name})))}_handleImagePopup(){this._handleCardClick({name:this._name,link:this._link})}isLiked(){return this._likes.some((e=>e._id===this._ownerId))}renderLikes(){this._cardCounter.textContent=this._likes.length,this.isLiked()?this._likeButton.classList.add("card__heart_active"):this._likeButton.classList.remove("card__heart_active")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getElement(){return this._element=this._getTemplate(),this._cardCounter=this._element.querySelector(".card__like-counter"),this._likeButton=this._element.querySelector(".card__heart"),this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__title").textContent=this._name,this._element.querySelector(".card__image").alt=this._name,this._cardDeleteButton=this._element.querySelector(".card__delete"),this._setEventListeners(),this.renderLikes(),this._ownerId?this._cardDeleteButton.classList.add(".card__delete"):this._cardDeleteButton.classList.remove(".card__delete"),this._element}}({cardData:t,cardSelector:"#card-template",handleCardClick:e=>{p.open(e)},handleLikeClick:(e,t)=>{s.isLiked()?k.removeLikes(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{console.log(e)})):k.addLikes(e).then((e=>{s.updateLikes(e.likes)})).catch((e=>{console.log(e)}))},handleDeleteClick(e){L.setSubmit((()=>(L.showLoading(),k.deleteCard(e).then((()=>{s.removeCard(),L.close()})).catch((e=>{console.log(e)})).finally((()=>{L.hideLoading()}))))),L.open()}});y.addItem(s.getElement())}k.getAppInfo().then((e=>{let[t,s]=e;C=s._id,m.setUserInfo(s),m.setAvatar(s),y=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:t,renderer:I},".cards__gallery"),y.renderItems()})).catch((e=>{console.log(e)})),l.addEventListener("click",(function(){const{name:e,description:t}=m.getUserInfo();d.value=e,u.value=t,g.open({name:e,description:t})})),a.addEventListener("click",(()=>{S.open(),f.resetValidation()})),_.addEventListener("click",(()=>{E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,